---
format: pdf
---

### Exercício 6
Seja $Y = X - r$, onde $X \sim BN(r, p)$. Assim, $Y$ é a variável aleatória que conta o número de fracassos antes de $r$ sucessos.

#### Item a
##### Algoritmo da Transformada Inversa
Calcular a inversa de $F_Y$, $F_Y^{-1}$, não é simples por conta da combinatória envolvida. Assim, vamos usar o algoritmo construtivo: geraremos o valor $u \in [0, 1]$ aleatóriamente e testaremos todos os $y \in \{0, 1, \dots\}$ até que se encontre um $y_0$ tal que $F(y_0 - 1) < u \leq F(y_0)$, onde $F(y) = \sum_{i = 0}^y {y + r -1\choose r - 1} p^r (1-p)^y$



##### Algoritmo usando a distribuição geométrica
Também podemos gerar uma amostra de uma binomial negativa utilizando a distribuição geométrica (com parâmetro $p$) da seguinte forma: geramos uma amostra aleatória de $r$ geométricas, e tomamos a soma delas como sendo uma amostra aleatória de uma binomial negativa.

#### Item b
```{r}
gerar_bn_inv <- function(n, p, r) {
  u_vec <- runif(n)
  
  result <- vector(mode = 'integer', length = n)
  
  for(i in seq_along(u_vec)) {
    prob_acum <- pnbinom(0, r, p)
    
    while(prob_acum < u_vec[i]) {
      result[i] <- result[i] + 1
      prob_acum <- pnbinom(result[i], r, p)
    }
  }
  
  return(result)
}

gerar_bn_geo <- function(n, p, r) {
  result <- vector(mode = 'integer', length = n)
  
  for(i in seq_along(result)) {
    result[i] <- sum(rgeom(r, p))
  }
  
  return(result)
}
```

Como comparar: gráfico de barras, qqplot, boxplot

```{r}
library(ggplot2)
bn_sim_inv <- gerar_bn_inv(5000, 0.7, 5)
bn_sim_geo <- gerar_bn_geo(5000, 0.7, 5)
bn_sim_r <- rnbinom(5000, 5, 0.7)

df1 <- data.frame(
  inv = bn_sim_inv,
  geo = bn_sim_geo,
  r = bn_sim_r
)

ggplot(df1, aes(sample = inv), ) +
  geom_qq(distribution = stats::qnbinom, prob = 0.7, size = 5) +
  geom_qq_line(distribution = stats::qnbinom, prob = 0.7, size = 5)
```


```{r}

```


